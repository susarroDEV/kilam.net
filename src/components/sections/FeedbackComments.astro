---
import Title from "@/components/utils/Title.astro"
import ChatIcon from "@/components/ui/ChatIcon.astro"
import LiteYoutube from "@/components/utils/LiteYoutube.astro"
import type { ProjectFeedback } from "@/types/projectsTypes"
import { portfolio } from "@/i18n/portfolio"
import { Image } from "astro:assets"

interface FeedbackCommentsProps {
  feedback: ProjectFeedback[] | []
  projectId: string
  lang: "es" | "en" | "ca" | "eu" | "gl"
}

const { feedback, lang, projectId } = Astro.props as FeedbackCommentsProps
---
{
  feedback.length > 0 && 
    <section>
      <div class="icon-container">
        <ChatIcon />
      </div>
      <Title
          title={portfolio[lang].feedback}
          size="large"
          theme="light"
          uppercase={{
            title: true,
            highlightTitle: false,
            subtitle: false
          }}
          />
          {
            feedback[0].type === 'text' &&
            <p>
              {feedback[0].content}
            </p>
          }
      <div class="feedback-comments">
        {
          feedback
            .filter((item => item.type !== 'text'))
            .map((item) => (
              <div>
                {item.type === 'video' && 
                  <LiteYoutube
                    backgroundImage={`/projects/${projectId}/${item.author?.toLowerCase()}.avif`}
                    videoId={typeof item.content === 'string' ? item.content : item.content.src}
                  />
                }
                {item.type === 'quote' && 
                  <p class="author-text">
                    ''{item.content}''
                  </p>
                }
                {item.author &&
                  <span class="author-name">
                    {item.type === 'quote' &&
                      <Image
                        src={`/projects/${projectId}/${item.author.toLowerCase()}.avif`}
                        alt={item.author}
                        width={40}
                        height={40}
                        class="author-image rounded-full"
                      />
                    }
                    <span>
                      {item.author}
                    </span>
                  </span>
                }
              </div>
            ))
        }
      </div>
    </section>
}

<style>
  section {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    padding: 2rem;
    border: 2px solid #00a0a0;
    background-image: 
      radial-gradient(circle at 20% 80%, rgba(0, 160, 160, 0.15) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(69, 168, 168, 0.15) 0%, transparent 50%),
      linear-gradient(
        135deg,
        var(--color-tertiary) 0%,
        rgba(var(--color-tertiary-rgb-value), 0.8) 15%,
        rgba(var(--color-tertiary-rgb-value), 0.4) 50%,
        rgba(var(--color-tertiary-rgb-value), 0.7) 85%,
        var(--color-tertiary) 100%
      );
    backdrop-filter: blur(2px);
    width: 72.5%;
    border-radius: 0.35rem;
    margin: 0 auto;
  }

  .icon-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1rem;
    width: fit-content;
    color: var(--color-quinary);
    border: 2px solid var(--color-quinary);
    padding: 1rem;
    border-radius: 999px;
    box-shadow: 
      0px 0px 10px var(--color-quinary),
      inset 0px 0px 10px var(--color-quinary);
  }

  .author-name {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    justify-content: center;
  }

  .author-text {
    font-style: italic;
  }

  .feedback-comments {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    width: 80%;
  }


  .feedback-comments > div {
    height: 20rem;
    background-color: var(--color-primary);
    border-radius: 0.35rem;
    border: 2px solid var(--color-secondary);
    flex: 1 1 30%;
    min-width: 300px;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    max-width: 400px;
    padding: 1rem 2rem;
  }

  .feedback-comments > div span {
    color: var(--color-quinary);
    font-size: 1.2rem;
    font-weight: 600;
    margin-top: 0.5rem;
  }

  .feedback-comments > div p {
    color: var(--color-quinary);
    font-size: 1.1rem;
    width: 100%;
    text-align: center;
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  p {
    color: var(--color-quinary);
    font-size: 1.1rem;
    width: 100%;
    text-align: center;
    margin-bottom: 1rem;
  }

  @media (width < 1200px) {
    section {
      width: 85%;
    }
    
    .feedback-comments {
      width: 90%;
    }
    
    .feedback-comments > div {
      flex: 1 1 45%;
      min-width: 280px;
    }
  }

  @media (width < 768px) {
    section {
      width: 95%;
      padding: 1.5rem 1rem;
      gap: 0.75rem;
    }
    
    .feedback-comments {
      width: 100%;
      gap: 0.75rem;
    }
    
    .feedback-comments > div {
      flex: 1 1 100%;
      min-width: unset;
      max-width: none;
      height: 18rem;
      padding: 1rem 1.5rem;
    }
    
    .icon-container {
      padding: 0.75rem;
    }
    
    p {
      font-size: 1rem;
    }
    
    .feedback-comments > div p {
      font-size: 1rem;
    }
    
    .feedback-comments > div span {
      font-size: 1.1rem;
    }
  }

  @media (width < 480px) {
    section {
      width: 98%;
      padding: 1rem 0.75rem;
      margin: 0 1%;
    }
    
    .feedback-comments > div {
      height: 16rem;
      padding: 0.75rem 1rem;
    }
    
    .icon-container {
      padding: 0.5rem;
      margin-bottom: 0.75rem;
    }
    
    p {
      font-size: 0.95rem;
    }
    
    .feedback-comments > div p {
      font-size: 0.95rem;
    }
    
    .feedback-comments > div span {
      font-size: 1rem;
    }
  }
</style>