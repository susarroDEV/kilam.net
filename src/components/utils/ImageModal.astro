---
import CrossIcon from "@/components/ui/CrossIcon.astro"
---

<style is:global>
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.9);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    overflow: hidden;
  }

  .modal-overlay.active {
    display: flex;
  }

  .modal-image {
    max-width: 90vw;
    max-height: 90vh;
    object-fit: contain;
  }

  .modal-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background-color: transparent;
    color: var(--color-contrast);
    border: none;
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background-color 0.3s, color 0.3s ease;
    padding: 0.5rem;
  }

  .modal-close svg {
    width: 100%;
    height: 100%;
  }

  .modal-close:hover {
    background-color: var(--color-contrast);
    color: var(--color-primary);
  }
</style>

<script>
  function initModal() {
    if (document.getElementById('image-modal')) return

    const modal = document.createElement('div')
    modal.id = 'image-modal'
    modal.className = 'modal-overlay'
    
    const closeBtn = document.createElement('button')
    closeBtn.className = 'modal-close'
    closeBtn.type = 'button'
    closeBtn.setAttribute('aria-label', 'Close')
    closeBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-12">
  <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
</svg>`
    
    const img = document.createElement('img')
    img.id = 'modal-image'
    img.className = 'modal-image'
    
    modal.appendChild(closeBtn)
    modal.appendChild(img)
    document.body.appendChild(modal)

    let currentImages: Element[] = []
    let currentIndex = 0

    function openModal(src: string, alt: string, images: Element[], index: number) {
      currentImages = images
      currentIndex = index
      img.src = src
      img.alt = alt
      modal.classList.add('active')
      document.body.classList.add('modal-open')
      document.documentElement.classList.add('modal-open')
    }

    function closeModal() {
      modal.classList.remove('active')
      document.body.classList.remove('modal-open')
      document.documentElement.classList.remove('modal-open')
      currentImages = []
      currentIndex = 0
    }

    function showImage(index: number) {
      if (currentImages.length === 0) return
      
      currentIndex = (index + currentImages.length) % currentImages.length
      const imgEl = currentImages[currentIndex]
      img.src = imgEl.getAttribute('src') || ''
      img.alt = imgEl.getAttribute('alt') || ''
    }

    function nextImage() {
      showImage(currentIndex + 1)
    }

    function prevImage() {
      showImage(currentIndex - 1)
    }

    document.querySelectorAll('.clickable-image').forEach(imgEl => {
      imgEl.addEventListener('click', () => {
        const infoBox = imgEl.closest('article')
        const imagesInBox = infoBox 
          ? Array.from(infoBox.querySelectorAll('.clickable-image'))
          : [imgEl]
        
        const index = imagesInBox.indexOf(imgEl)
        const src = imgEl.getAttribute('src') || ''
        const alt = imgEl.getAttribute('alt') || ''
        openModal(src, alt, imagesInBox, index)
      })
    })

    closeBtn.addEventListener('click', closeModal)

    modal.addEventListener('click', (e) => {
      if (e.target === modal) closeModal()
    })

    document.addEventListener('keydown', (e) => {
      if (!modal.classList.contains('active')) return
      
      if (e.key === 'Escape') {
        closeModal()
      } else if (e.key === 'ArrowRight') {
        nextImage()
      } else if (e.key === 'ArrowLeft') {
        prevImage()
      }
    })
  }

  document.addEventListener('DOMContentLoaded', initModal)
  document.addEventListener('astro:page-load', initModal)
</script>
